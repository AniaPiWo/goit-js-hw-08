{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,UAChCC,EAAS,IAAIC,MAAMC,OAAOL,GAEhCG,EAAOG,GAAG,QAAQ,WACdC,QAAQC,IAAI,oB,IAGhBL,EAAOM,gBAAgBC,MAAK,SAASC,GACjCJ,QAAQC,IAAI,SAAUG,E","sources":["src/js/02-video.js"],"sourcesContent":["const iframe = document.querySelector(\"iframe\");\nconst player = new Vimeo.Player(iframe);\n\nplayer.on('play', function() {\n    console.log('played the video!');\n    });\n\nplayer.getVideoTitle().then(function(title) {\n    console.log('title:', title);\n});\n\n\n\n/* player.setCurrentTime(localStorage.getItem()).then(function(seconds) {\n    // seconds = the actual time that the player seeked to\n}).catch(function(error) {\n    switch (error.name) {\n        case 'RangeError':\n            // the time was less than 0 or greater than the video’s duration\n            break;\n\n        default:\n            // some other error occurred\n            break;\n    }\n});  */\n/* \n1. Zapoznaj się z dokumentacją biblioteki odtwarzacza Vimeo.\n2. Dodaj bibliotekę jako zależność projektu poprzez npm.\n3. Inicjalizuj odtwarzacz w pliku skryptu tak, jak opisano w sekcji pre-existing player, ale weź pod uwagę to, że odtwarzacz dodano jako pakiet npm, a nie poprzez CDN.4. Zbadaj dokumentację metody on() i zacznij śledzić zdarzenie timeupdate - aktualizacja czasu odtwarzania.\n5. Zapisuj czas odtwarzania w local storage. Niech kluczem do storage będzie \"videoplayer-current-time\".\n6. Do przeładowywania strony używaj metody setCurrentTime() aby wznowić odtwarzanie od zapisanego momentu.\n7 Dodaj do projektu bibliotekę lodash.throttle i zrób tak, aby czas odtwarzania aktualizował się w storage nie częściej niż raz na sekundę. */"],"names":["$c006019e0678fe87$var$iframe","document","querySelector","$c006019e0678fe87$var$player","Vimeo","Player","on","console","log","getVideoTitle","then","title"],"version":3,"file":"02-video.b87ecf10.js.map"}